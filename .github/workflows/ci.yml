name: modulir CI

env:
  GO_VERSION: 1.19

  # Paths for various manually installed utilities. Don't try to use $HOME
  # because GitHub Actions won't support it.
  MAGICK_BIN: /home/runner/imagemagick/bin/magick
  MOZJPEG_BIN: /opt/mozjpeg/bin/cjpeg
  PNGQUANT_BIN: /usr/bin/pngquant

on:
  pull_request:
  push:
  schedule:
    # ever day at 8 AM
    - cron: "0 8 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      # The copy of ImageMagick we could get from apt-get is ancient and
      # doesn't handle niceties like `.heic` files, so here we get the binary
      # release directly. When Ubuntu is upgraded at some point in the
      # probably-distant future, we can probably get rid of this.
      - name: Install ImageMagick
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          mkdir -p $(dirname "${{ env.MAGICK_BIN }}")
          curl --compressed -L -o "${{ env.MAGICK_BIN }}" https://github.com/brandur/imagemagick-builder/releases/download/master/magick
          chmod +x "${{ env.MAGICK_BIN }}"

      # Uses an artifact built by: https://github.com/brandur/mozjpeg-builder
      - name: Install MozJPEG
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          curl --compressed -L -O https://github.com/brandur/mozjpeg-builder/releases/download/master/mozjpeg_amd64.deb
          sudo dpkg -i mozjpeg_amd64.deb

      - name: Install PNGQuant
        run: sudo apt-get install pngquant

      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug
        run: |
          echo "github.ref=${{ github.ref }}"
          echo "go env GOPATH=$(go env GOPATH)"
          echo "pwd=$(pwd)"
          echo "GITHUB_WORKSPACE=${GITHUB_WORKSPACE}"
          echo "HOME=${HOME}"

      - name: "Go: Clean"
        run: make clean

      - name: "Go: Test"
        run: make test

      - name: "Go: Vet"
        run: make vet

      - name: "Check: Gofmt"
        run: make check-gofmt

  golangci-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: "Check: golangci-lint"
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49

